@top Program { Line+ }
@skip { space | Comment }

value { Map | Tuple | Enum | Decimal | Array | Tuple | Option | StringLiteral | NonFungibleGlobalId | NonFungibleLocalId | Address | Integer | Bool | Variable | Expression | Bucket | Proof | Blob | PreciseDecimal | Bytes | Result }

Line { Method (value)+ Semicolon }
Address { ("Address" "\(" StringLiteral ")")  } 
Option { "Some(" value ")" | "None" }
Decimal { "Decimal(" StringLiteral ")" }
PreciseDecimal { "PreciseDecimal(" StringLiteral ")"}
Tuple {"Tuple" "(" (value ","?)* ")"}
Array {"Array<" ArrayType ">(" (value ","?)* ")"}
Enum {"Enum" ("<" (EnumName | Integer) ">") "(" (value ","?)* ")" }
Map {"Map<" MapKeyType "," MapValueType ">(" MapItem* ")"}
MapItem { (value "=>" value ","?) }
Bucket {"Bucket(" StringLiteral ")"}
Proof {"Proof(" StringLiteral ")"}
Blob {"Blob(" StringLiteral ")"}
Bytes {"Bytes(" hex* ")"}
NonFungibleGlobalId {"NonFungibleGlobalId(" StringLiteral ")"}
NonFungibleLocalId {"NonFungibleLocalId(" StringLiteral ")"}
Result {"Ok(" StringLiteral ")" | "Err(" StringLiteral ")"}
Expression {"Expression("StringLiteral")" | "Expression("StringLiteral")"}
EnumName { word "::" word }
ArrayType { word }
MapKeyType {word}
MapValueType {word}

@tokens {
  Integer { number ("u" | "i") ("8" | "16" | "32" | "64" | "128") }
  StringLiteral { "\"" (!["])* "\"" }
  Variable { "$" (  char+  | "{" char+ "}") }
  Semicolon { ";" }
  Bool { "true" | "false" }
  Comment { "#" ![\n]* }
  
  number { @digit+ }
  space { @whitespace+ }

  word { $[a-zA-Z]+ }
  char { $[a-zA-Z0-9_] | "\\" esc }
  esc  { $["\\\/bfnrt] | "u" hex hex hex hex }
  hex  { $[0-9a-fA-F] }

  Method { $[A-Z_]+ (" " | "\n") }
}